/**
 * @license
 * Copyright (c) 2025 Raphyah
 * Licensed under the MIT License. See LICENSE file in the project root for details.
 */
import{ContainerSlot,Entity,ItemStack,World}from"@minecraft/server";const setDynamicBuffer=function(e,t){if("string"!=typeof e)throw new TypeError("Invalid identifier: expected a string");if(!e)throw new TypeError("Invalid identifier: string can not be empty");if(null==t)return this.setDynamicProperty(e,t);if(Array.isArray(t)&&(t=new Float64Array(t)),!(t instanceof ArrayBuffer||ArrayBuffer.isView(t)))throw new TypeError("Invalid buffer: expected one of number[] | ArrayBuffer | ArrayBufferView | undefined");const r=new Uint8Array(t.buffer||t),n=r.byteLength;if(n>20476)throw new RangeError("Invalid buffer: buffer length can not be greater than 20476 bytes");const i=new Uint16Array(Math.ceil(n/15*8)+1);let f=0,o=0,y=0;i[y++]=n;for(let e=0;e<n;e++){for(f=f<<8|r[e],o+=8;o>=15;)o-=15,i[y++]=f>>o&32767|32768}o>0&&(i[y]=f<<15-o&32767|32768),this.setDynamicProperty(e,String.fromCharCode.apply(null,i))},getDynamicBuffer=function(e){if("string"!=typeof e)throw new TypeError("Invalid identifier: expected a string");if(!e)throw new TypeError("Invalid identifier: string can not be empty");const t=this.getDynamicProperty(e);if("string"!=typeof t)return;const r=t.charCodeAt(0),n=t.length,i=new ArrayBuffer(r),f=new Uint8Array(i);let o=0,y=0,a=0;for(let e=1;e<n;e++){for(o=o<<15|32768^t.charCodeAt(e),y+=15;y>=8&&!(a>=i.byteLength);)y-=8,f[a++]=o>>y&255}return y>0&&a<r&&(f[a]=o<<8-y&255),i};"setDynamicBuffer"in ContainerSlot.prototype||Object.defineProperty(ContainerSlot.prototype,"setDynamicBuffer",{value:setDynamicBuffer}),"getDynamicBuffer"in ContainerSlot.prototype||Object.defineProperty(ContainerSlot.prototype,"getDynamicBuffer",{value:getDynamicBuffer}),"setDynamicBuffer"in Entity.prototype||Object.defineProperty(Entity.prototype,"setDynamicBuffer",{value:setDynamicBuffer}),"getDynamicBuffer"in Entity.prototype||Object.defineProperty(Entity.prototype,"getDynamicBuffer",{value:getDynamicBuffer}),"setDynamicBuffer"in ItemStack.prototype||Object.defineProperty(ItemStack.prototype,"setDynamicBuffer",{value:setDynamicBuffer}),"getDynamicBuffer"in ItemStack.prototype||Object.defineProperty(ItemStack.prototype,"getDynamicBuffer",{value:getDynamicBuffer}),"setDynamicBuffer"in World.prototype||Object.defineProperty(World.prototype,"setDynamicBuffer",{value:setDynamicBuffer}),"getDynamicBuffer"in World.prototype||Object.defineProperty(World.prototype,"getDynamicBuffer",{value:getDynamicBuffer});